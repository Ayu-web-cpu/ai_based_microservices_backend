# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import search_pb2 as search__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in search_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GatewayAuthSearchStub(object):
    """------------------------------
    Combined service
    ------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/gateway.GatewayAuthSearch/Login',
                request_serializer=search__pb2.LoginRequest.SerializeToString,
                response_deserializer=search__pb2.TokenResponse.FromString,
                _registered_method=True)
        self.Verify = channel.unary_unary(
                '/gateway.GatewayAuthSearch/Verify',
                request_serializer=search__pb2.VerifyRequest.SerializeToString,
                response_deserializer=search__pb2.VerifyResponse.FromString,
                _registered_method=True)
        self.SaveHistory = channel.unary_unary(
                '/gateway.GatewayAuthSearch/SaveHistory',
                request_serializer=search__pb2.SaveHistoryRequest.SerializeToString,
                response_deserializer=search__pb2.SaveHistoryResponse.FromString,
                _registered_method=True)
        self.ListHistory = channel.unary_unary(
                '/gateway.GatewayAuthSearch/ListHistory',
                request_serializer=search__pb2.ListHistoryRequest.SerializeToString,
                response_deserializer=search__pb2.ListHistoryResponse.FromString,
                _registered_method=True)
        self.DeleteHistory = channel.unary_unary(
                '/gateway.GatewayAuthSearch/DeleteHistory',
                request_serializer=search__pb2.DeleteHistoryRequest.SerializeToString,
                response_deserializer=search__pb2.DeleteHistoryResponse.FromString,
                _registered_method=True)


class GatewayAuthSearchServicer(object):
    """------------------------------
    Combined service
    ------------------------------
    """

    def Login(self, request, context):
        """Auth
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Verify(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveHistory(self, request, context):
        """Search history management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewayAuthSearchServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=search__pb2.LoginRequest.FromString,
                    response_serializer=search__pb2.TokenResponse.SerializeToString,
            ),
            'Verify': grpc.unary_unary_rpc_method_handler(
                    servicer.Verify,
                    request_deserializer=search__pb2.VerifyRequest.FromString,
                    response_serializer=search__pb2.VerifyResponse.SerializeToString,
            ),
            'SaveHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveHistory,
                    request_deserializer=search__pb2.SaveHistoryRequest.FromString,
                    response_serializer=search__pb2.SaveHistoryResponse.SerializeToString,
            ),
            'ListHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHistory,
                    request_deserializer=search__pb2.ListHistoryRequest.FromString,
                    response_serializer=search__pb2.ListHistoryResponse.SerializeToString,
            ),
            'DeleteHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteHistory,
                    request_deserializer=search__pb2.DeleteHistoryRequest.FromString,
                    response_serializer=search__pb2.DeleteHistoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gateway.GatewayAuthSearch', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gateway.GatewayAuthSearch', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GatewayAuthSearch(object):
    """------------------------------
    Combined service
    ------------------------------
    """

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gateway.GatewayAuthSearch/Login',
            search__pb2.LoginRequest.SerializeToString,
            search__pb2.TokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Verify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gateway.GatewayAuthSearch/Verify',
            search__pb2.VerifyRequest.SerializeToString,
            search__pb2.VerifyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SaveHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gateway.GatewayAuthSearch/SaveHistory',
            search__pb2.SaveHistoryRequest.SerializeToString,
            search__pb2.SaveHistoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gateway.GatewayAuthSearch/ListHistory',
            search__pb2.ListHistoryRequest.SerializeToString,
            search__pb2.ListHistoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/gateway.GatewayAuthSearch/DeleteHistory',
            search__pb2.DeleteHistoryRequest.SerializeToString,
            search__pb2.DeleteHistoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
